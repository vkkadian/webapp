<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
  http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.dummycompany</groupId>
  <artifactId>webapp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Dummy Web Application</name>
  <url>http://maven.apache.org</url>
	<build>
		<finalName>webapp</finalName>

		<plugins>
		    <!-- Eclipse project -->
		  <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-eclipse-plugin</artifactId>
			<version>2.9</version>
			<configuration>
			        <!-- Always download and attach dependencies source code -->
				<downloadSources>true</downloadSources>
				<downloadJavadocs>false</downloadJavadocs>
				<!-- Avoid type mvn eclipse:eclipse -Dwtpversion=2.0 -->
				<wtpversion>2.0</wtpversion>
			</configuration>
		  </plugin>
			
		  <!-- For Maven Tomcat Plugin -->
		  <plugin>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<configuration>
				<path>/</path>
			</configuration>
		  </plugin>

		</plugins>

	</build>
	<profiles>
	      <profile>
	         <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
	         <!-- Use this profile for any OpenShift specific customization your app will need. -->
	         <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
	         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
	         <id>openshift</id>
	         <build>
	            <plugins>
	               <plugin>
	                  <artifactId>maven-war-plugin</artifactId>
	                  <version>2.1.1</version>
	                  <configuration>
	                     <outputDirectory>.dpl</outputDirectory>
	                     <warName>webapp</warName>
	                     <failOnMissingWebXml>false</failOnMissingWebXml>
	                  </configuration>
	               </plugin>
	            </plugins>
	         </build>
	      </profile>
	</profiles>	
</project>
